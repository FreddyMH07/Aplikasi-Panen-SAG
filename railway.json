{
  "$schema": "https://railway.app/railway.schema.json",
  "build": {
    "builder": "NIXPACKS",
    "buildCommand": "composer install --no-dev && composer dump-autoload && npm ci && npm run build"
  },
  "deploy": {
  "startCommand": "bash -lc 'set -e; if [ -f .env.railway ]; then echo Using .env.railway template; cp .env.railway .env; elif [ -f .env.railway.postgres.example ]; then echo Using fallback .env.railway.postgres.example; cp .env.railway.postgres.example .env; else echo No env template found, generating minimal .env; printf \"APP_NAME=\\\"Sistem Panen Sawit\\\"\\nAPP_ENV=production\\nAPP_URL=${APP_URL:-https://example.com}\\n\" > .env; fi; if ! grep -q '^APP_KEY=' .env || [ -z \"$(grep '^APP_KEY=' .env | cut -d= -f2)\" ]; then php artisan key:generate --force || true; fi; composer dump-autoload -o; echo ==== ENV DB SUMMARY ====; echo DB_HOST=$DB_HOST DB_PORT=$DB_PORT PGHOST=$PGHOST RAILWAY_PRIVATE_DOMAIN=$RAILWAY_PRIVATE_DOMAIN PGSSLMODE=$PGSSLMODE; HOST=${DB_HOST:-${PGHOST:-$RAILWAY_PRIVATE_DOMAIN}}; echo Using resolved DB host: $HOST; echo Waiting for Postgres host $HOST:$DB_PORT ...; for i in $(seq 1 60); do (echo > /dev/tcp/$HOST/$DB_PORT) >/dev/null 2>&1 && echo DB port open on $HOST && break || echo wait $i...; sleep 2; done; if [ $i -eq 60 ]; then echo Postgres not reachable after 120s on $HOST:$DB_PORT; exit 1; fi; php artisan migrate --force --no-interaction; php artisan db:seed --force --no-interaction || true; php artisan config:cache; php artisan route:cache; php artisan view:cache; php artisan optimize:clear; php artisan serve --host=0.0.0.0 --port=$PORT'",
    "restartPolicyType": "ON_FAILURE",
    "restartPolicyMaxRetries": 10
  }
}
