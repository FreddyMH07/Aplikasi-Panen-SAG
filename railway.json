{
  "$schema": "https://railway.app/railway.schema.json",
  "build": {
    "builder": "NIXPACKS",
    "buildCommand": "composer install --no-dev && composer dump-autoload && npm ci && npm run build"
  },
  "deploy": {
    "startCommand": "bash -lc 'set -e; cp .env.railway .env || cp .env.railway.postgres.example .env; php artisan key:generate --force || true; composer dump-autoload -o; echo ==== ENV DB SUMMARY ====; echo DB_HOST=$DB_HOST DB_PORT=$DB_PORT RAILWAY_PRIVATE_DOMAIN=$RAILWAY_PRIVATE_DOMAIN PGSSLMODE=$PGSSLMODE; HOST=${DB_HOST:-$RAILWAY_PRIVATE_DOMAIN}; echo Waiting for Postgres host $HOST:$DB_PORT ...; for i in $(seq 1 60); do (echo > /dev/tcp/$HOST/$DB_PORT) >/dev/null 2>&1 && echo DB port open on $HOST && break || echo wait $i...; if [ $i -eq 15 ] && [ -n \"$RAILWAY_PRIVATE_DOMAIN\" ] && [ \"$HOST\" != \"$RAILWAY_PRIVATE_DOMAIN\" ]; then echo Switching to private host $RAILWAY_PRIVATE_DOMAIN; HOST=$RAILWAY_PRIVATE_DOMAIN; fi; sleep 2; done; if [ $i -eq 60 ]; then echo Postgres not reachable after 120s on $HOST:$DB_PORT; exit 1; fi; php artisan migrate --force --no-interaction; php artisan db:seed --force --no-interaction; php artisan config:cache; php artisan route:cache; php artisan view:cache; php artisan optimize:clear; php artisan serve --host=0.0.0.0 --port=$PORT'",
    "restartPolicyType": "ON_FAILURE",
    "restartPolicyMaxRetries": 10
  }
}
